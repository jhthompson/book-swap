# Generated by Django 5.2 on 2025-10-12 18:41

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import isbn_field.fields
import isbn_field.validators
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='OpenLibraryAuthor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('openlibrary_author_id', models.CharField(max_length=50, unique=True, verbose_name='OpenLibrary Author ID')),
            ],
            options={
                'verbose_name': 'OpenLibrary author',
                'verbose_name_plural': 'OpenLibrary authors',
            },
        ),
        migrations.CreateModel(
            name='BookListing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('isbn', isbn_field.fields.ISBNField(blank=True, max_length=28, null=True, validators=[isbn_field.validators.ISBNValidator], verbose_name='ISBN')),
                ('authors', models.CharField(max_length=255)),
                ('cover', models.ImageField(upload_to='book_listing_covers/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('AVAILABLE', 'Available'), ('SWAPPED', 'Swapped'), ('REMOVED', 'Removed')], default='PENDING', max_length=9)),
                ('openlibrary_edition_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='OpenLibrary Edition ID')),
                ('openlibrary_work_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='OpenLibrary Work ID')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('openlibrary_authors', models.ManyToManyField(blank=True, to='core.openlibraryauthor', verbose_name='OpenLibrary Authors')),
            ],
        ),
        migrations.CreateModel(
            name='BookSwap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PROPOSED', 'Proposed'), ('CANCELLED', 'Cancelled'), ('RESCINDED', 'Rescinded'), ('ACCEPTED', 'Accepted'), ('COMPLETED', 'Completed'), ('DECLINED', 'Declined')], default='PROPOSED', max_length=9)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('offered_listings', models.ManyToManyField(related_name='offered_listings', to='core.booklisting')),
                ('proposed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposed_by', to=settings.AUTH_USER_MODEL)),
                ('proposed_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='proposed_to', to=settings.AUTH_USER_MODEL)),
                ('requested_listings', models.ManyToManyField(related_name='requested_listings', to='core.booklisting')),
            ],
        ),
        migrations.CreateModel(
            name='BookSwapEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('PROPOSE', 'Proposed'), ('CANCEL', 'Cancelled'), ('RESCIND', 'Rescinded'), ('ACCEPT', 'Accepted'), ('DECLINE', 'Declined'), ('COMPLETE', 'Completed')], max_length=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('swap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='core.bookswap')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BookSwapMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('swap', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='core.bookswap')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=100)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
